scale_y_continuous(limits=c(0,3e3))
forecast <- function(nyc,uk){
nyc_time <- max(nyc$outbreak_time,na.rm=T)
max_time <- max(uk$outbreak_time,na.rm=T)
### need to update x from nyc_time+1 to max_time.
### To do so, we need to project NYC growth rates assuming a parallel trajectory to UK
ukk <- uk[outbreak_time>nyc_time,c('outbreak_time','growth_rate','p2.5_growth_rate','p97.5_growth_rate')]
fit <- gam(growth_rate~s(outbreak_time),data=ukk)
fit2.5 <- gam(p2.5_growth_rate~s(outbreak_time),data=ukk)
fit97.5 <- gam(p97.5_growth_rate~s(outbreak_time),data=ukk)
init <- nyc[.N,c('p2.5_growth_rate','growth_rate','p97.5_growth_rate','mean_position')]
last <- data.frame('outbreak_time'=nyc_time)
dum <- nyc[1:(max_time-nyc_time)]
dum[,outbreak_time:=(nyc_time+1):max_time]
dum[,date:=max(nyc$date)+1:.N]
dum$growth_rate <- fit$fitted.values-predict(fit,newdata = last)+init$growth_rate
dum$p2.5_growth_rate <- fit2.5$fitted.values-predict(fit2.5,newdata=last)+init$p2.5_growth_rate
dum$p97.5_growth_rate <- fit97.5$fitted.values-predict(fit97.5,newdata=last)+init$p97.5_growth_rate
dum$mean_position <- init$mean_position+cumsum(dum$growth_rate)
dum$p2.5_position <- init$mean_position+cumsum(dum$p2.5_growth_rate)
dum$p97.5_position <- init$mean_position+cumsum(dum$p97.5_growth_rate)
dum$forecast <- TRUE
nyc$forecast <- FALSE
dum <- rbind(nyc[.N],dum)
dum[1,p2.5_position:=mean_position]
dum[1,p97.5_position:=mean_position]
## stitching together so the "forecast" includes the last observation and fans out.
## This isn't exactly right, since our last observation's estimated mean position
## may not be the true position, but we'll assume these errors in mean_position
## are small relative to the propagated uncertainty in growth rates
return(rbind(nyc,dum))
}
nyc <- forecast(nyc,uk)
nyc
nyc[,forecast==TRUE]
rm
nyc$rm
nyc
nyc$rm
nyc <- xx[region=='New York City']
uk <- xx[region=='United Kingdom']
nyc <- forecast(nyc,uk)
fit$fitted.values-c(predict(fit,newdata = last))+init$growth_rate
forecast <- function(nyc,uk){
nyc_time <- max(nyc$outbreak_time,na.rm=T)
max_time <- max(uk$outbreak_time,na.rm=T)
### need to update x from nyc_time+1 to max_time.
### To do so, we need to project NYC growth rates assuming a parallel trajectory to UK
ukk <- uk[outbreak_time>nyc_time,c('outbreak_time','growth_rate','p2.5_growth_rate','p97.5_growth_rate')]
fit <- gam(growth_rate~s(outbreak_time),data=ukk)
fit2.5 <- gam(p2.5_growth_rate~s(outbreak_time),data=ukk)
fit97.5 <- gam(p97.5_growth_rate~s(outbreak_time),data=ukk)
init <- nyc[.N,c('p2.5_growth_rate','growth_rate','p97.5_growth_rate','mean_position')]
last <- data.frame('outbreak_time'=nyc_time)
dum <- nyc[1:(max_time-nyc_time)]
dum[,outbreak_time:=(nyc_time+1):max_time]
dum[,date:=max(nyc$date)+1:.N]
dum$growth_rate <- fit$fitted.values-c(predict(fit,newdata = last))+init$growth_rate
dum$p2.5_growth_rate <- fit2.5$fitted.values-c(predict(fit2.5,newdata=last))+init$p2.5_growth_rate
dum$p97.5_growth_rate <- fit97.5$fitted.values-c(predict(fit97.5,newdata=last))+init$p97.5_growth_rate
dum$mean_position <- init$mean_position+cumsum(dum$growth_rate)
dum$p2.5_position <- init$mean_position+cumsum(dum$p2.5_growth_rate)
dum$p97.5_position <- init$mean_position+cumsum(dum$p97.5_growth_rate)
dum$rm <- NA
dum$new_confirmed <- NA
dum$raw_cases <- NA
dum$forecast <- TRUE
nyc$forecast <- FALSE
dum <- rbind(nyc[.N],dum)
dum[1,p2.5_position:=mean_position]
dum[1,p97.5_position:=mean_position]
## stitching together so the "forecast" includes the last observation and fans out.
## This isn't exactly right, since our last observation's estimated mean position
## may not be the true position, but we'll assume these errors in mean_position
## are small relative to the propagated uncertainty in growth rates
return(rbind(nyc,dum))
}
nyc
nyc$rm
forecast <- function(nyc,uk){
nyc_time <- max(nyc$outbreak_time,na.rm=T)
max_time <- max(uk$outbreak_time,na.rm=T)
### need to update x from nyc_time+1 to max_time.
### To do so, we need to project NYC growth rates assuming a parallel trajectory to UK
ukk <- uk[outbreak_time>nyc_time,c('outbreak_time','growth_rate','p2.5_growth_rate','p97.5_growth_rate')]
fit <- gam(growth_rate~s(outbreak_time),data=ukk)
fit2.5 <- gam(p2.5_growth_rate~s(outbreak_time),data=ukk)
fit97.5 <- gam(p97.5_growth_rate~s(outbreak_time),data=ukk)
init <- nyc[.N,c('p2.5_growth_rate','growth_rate','p97.5_growth_rate','mean_position')]
last <- data.frame('outbreak_time'=nyc_time)
dum <- nyc[1:(max_time-nyc_time)]
dum[,outbreak_time:=(nyc_time+1):max_time]
dum[,date:=max(nyc$date)+1:.N]
dum$growth_rate <- fit$fitted.values-c(predict(fit,newdata = last))+init$growth_rate
dum$p2.5_growth_rate <- fit2.5$fitted.values-c(predict(fit2.5,newdata=last))+init$p2.5_growth_rate
dum$p97.5_growth_rate <- fit97.5$fitted.values-c(predict(fit97.5,newdata=last))+init$p97.5_growth_rate
dum$mean_position <- init$mean_position+cumsum(dum$growth_rate)
dum$p2.5_position <- init$mean_position+cumsum(dum$p2.5_growth_rate)
dum$p97.5_position <- init$mean_position+cumsum(dum$p97.5_growth_rate)
dum$rm <- NA
dum$new_confirmed <- NA
dum$raw_cases <- NA
dum$forecast <- TRUE
nyc$forecast <- FALSE
dum <- rbind(nyc[.N],dum)
dum[1,p2.5_position:=mean_position]
dum[1,p97.5_position:=mean_position]
## stitching together so the "forecast" includes the last observation and fans out.
## This isn't exactly right, since our last observation's estimated mean position
## may not be the true position, but we'll assume these errors in mean_position
## are small relative to the propagated uncertainty in growth rates
return(rbind(nyc,dum))
}
nyc <- xx[region=='New York City']
uk <- xx[region=='United Kingdom']
nyc <- forecast(nyc,uk)
nyc$rm
x <- nyc$new_confirmed
x[nyc$forecast]
x
x[nyc$forecast] <- exp(nyc[forecsat==TRUE,mean_position])
x[nyc$forecast] <- exp(nyc[forecast==TRUE,mean_position])
x
x[nyc$forecast] <- round(exp(nyc[forecast==TRUE,mean_position]))
rm <- rollapply(x,mean,7,na.rm=T,align='right')
rm <- rollapply(x,fun=mean,7,na.rm=T,align='right')
rm <- rollapply(x,FUN=mean,7,na.rm=T,align='right')
rm
? rollapply
frollmean(x,7,align='right')
frollmean(x,7,align='right',na.rm = T)
rm <- nyc$rm
ix <- which(nyc$forecast)
ix <- which(nyc$forecast)
x <- nyc$new_confirmed
x[ix] <- round(exp(nyc[ix,mean_position]))
rm <- nyc$rm
frollmean(x,7,align='right')
frollmean(x,7,align='right',na.rm=T)[ix]
rm[ix] <- frollmean(x,7,align='right',na.rm=T)[ix]
rm
rm[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
rm
rm2.5 <- rm
x[ix] <- round(exp(nyc[ix,p2.5_position]))
rm2.5[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
rm2.5
rm
glue_ma <- function(nyc){
ix <- which(nyc$forecast)
x <- nyc$new_confirmed
x[ix] <- round(exp(nyc[ix,mean_position]))
rm <- nyc$rm
rm[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$rm <- rm
rm2.5 <- rm
x[ix] <- round(exp(nyc[ix,p2.5_position]))
rm2.5[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$p2.5_rm <- rm2.5
rm97.5 <- rm
x[ix] <- round(exp(nyc[ix,p97.5_position]))
rm97.5[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$p97.5_rm <- rm97.5
return(nyc)
}
nyc <- xx[region=='New York City']
uk <- xx[region=='United Kingdom']
nyc <- forecast(nyc,uk) %>% glue_ma
medium_alert_threshold=(200/1e5)*8.4e6/7
ll <- function(sd,mn=nyc_cases[.N,rm],
up=nyc_cases[.N,p97.5_rm],
lw=nyc_cases[.N,p2.5_rm]){
((up-qnorm(.975,mean=mn,sd=sd))^2+(lw-qnorm(.025,mean=mn,sd=sd))^2) %>% return
}
sdlog <- optimize(f=ll,interval = c(.1,1e3))$minimum
ll <- function(sd,mn=nyc[.N,rm],
up=nyc[.N,p97.5_rm],
lw=nyc[.N,p2.5_rm]){
((up-qnorm(.975,mean=mn,sd=sd))^2+(lw-qnorm(.025,mean=mn,sd=sd))^2) %>% return
}
sdlog <- optimize(f=ll,interval = c(.1,1e3))$minimum
sdlog
prob=signif(1-plnorm(medium_alert_threshold,meanlog=log(nyc[.N,rm]),sdlog=sdlog),2)*100
prob
medium_alert_threshold=(200/1e5)*8.4e6/7
ggplot(nyc,aes(date,rm))+
geom_line(data=nyc[forecast==FALSE],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast=TRUE],aes(ymin=p2.5,ymax=p97.5),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)
ggplot(nyc,aes(date,rm))+
geom_line(data=nyc[forecast==FALSE],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5,ymax=p97.5),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)
fc <- ggplot(nyc,aes(date,rm))+
geom_line(data=nyc[forecast==FALSE],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)+
annotate(geom='text',x=as.Date('2022-03-18'),y=medium_alert_threshold+90,
label="Medium Alert Level Threshold",size=6)+
scale_y_continuous('New Cases')+
annotate(geom='segment',x=as.Date('2022-04-03'),xend=max(nyc_cases$date),y=2620,yend=medium_alert_threshold)+
annotate(geom='text',x=as.Date('2022-04-03'),y=2730,
label=paste(prob,'% chance of\n Medium Alert by ',max(nyc_cases$date),sep=''),
fill='white',color='black')+
geom_point(data=ny_tot_manual,cex=4,color='darkred')+
geom_line(data=ny_tot_manual,color='darkred')+
ggtitle('NYC Outbreak Forecast: If NYC follows UK trajectory')
ggplot(nyc,aes(date,rm))+
geom_line(data=nyc[forecast==FALSE],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)
ggplot(nyc,aes(date,rm))+
geom_line(data=nyc[forecast==FALSE & !is.na(rm)],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)
ggplot(nyc[forecast=TRUE],aes(date,exp(mean_position)))+
geom_line(data=nyc[forecast=FALSE],lwd=2,col='red')+
geom_line(lwd=2,col='red',lty=2)
ggplot(nyc[forecast==TRUE],aes(date,exp(mean_position)))+
geom_line(data=nyc[forecast==FALSE],lwd=2,col='red')+
geom_line(lwd=2,col='red',lty=2)
sdlog
nyc[.N,rm]
nyc[.N,p97.5_rm]
nyc[.N,p2.5_rm]
(200/1e5)*8.4e6/7
ll <- function(sd,mn=nyc[.N,rm],
up=nyc[.N,p97.5_rm],
lw=nyc[.N,p2.5_rm]){
((up-qnorm(.975,mean=mn,sd=sd))^2+(lw-qnorm(.025,mean=mn,sd=sd))^2) %>% return
}
optimize(f=ll,interval = c(.1,1e3))
ll <- function(sd,mn=nyc[.N,rm],
up=nyc[.N,p97.5_rm],
lw=nyc[.N,p2.5_rm]){
-((up-qnorm(.975,mean=mn,sd=sd))^2+(lw-qnorm(.025,mean=mn,sd=sd))^2) %>% return
}
optimize(f=ll,interval = c(.1,1e3))
nyc[.N,p97.5_rm]
ll <- function(sd,mn=log(nyc[.N,rm]),
up=log(nyc[.N,p97.5_rm]),
lw=log(nyc[.N,p2.5_rm]){
((up-qnorm(.975,mean=mn,sd=sd))^2+(lw-qnorm(.025,mean=mn,sd=sd))^2) %>% return
}
sdlog <- optimize(f=ll,interval = c(.1,1e3))$minimum
prob=signif(1-plnorm(medium_alert_threshold,meanlog=log(nyc[.N,rm]),sdlog=sdlog),2)*100
ggplot(nyc[forecast==TRUE],aes(date,exp(mean_position)))+
geom_line(data=nyc[forecast==FALSE],lwd=2,col='red')+
geom_line(lwd=2,col='red',lty=2)
fc <- ggplot(nyc,aes(date,rm))+
geom_line(data=nyc[forecast==FALSE & !is.na(rm)],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)+
annotate(geom='text',x=as.Date('2022-03-18'),y=medium_alert_threshold+90,
label="Medium Alert Level Threshold",size=6)+
scale_y_continuous('New Cases')+
annotate(geom='segment',x=as.Date('2022-04-03'),xend=max(nyc_cases$date),y=2620,yend=medium_alert_threshold)+
annotate(geom='text',x=as.Date('2022-04-03'),y=2730,
label=paste(prob,'% chance of\n Medium Alert by ',max(nyc_cases$date),sep=''),
fill='white',color='black')+
geom_point(data=ny_tot_manual,cex=4,color='darkred')+
geom_line(data=ny_tot_manual,color='darkred')+
ggtitle('NYC Outbreak Forecast: If NYC follows UK trajectory')
ggarrange(grs,fc,ncol=2,labels=c("A",'B'))
ggsave('figures/BA2_NYC_forecast.png',height=6,width=15)
nyc_cases[p97.5>medium_alert_threshold,min(date)]
log(nyc[.N,rm])
log(nyc[.N,p97.5_rm])
log(nyc[.N,p2.5_rm])
ll <- function(sd,
mn=log(nyc[.N,rm]),
up=log(nyc[.N,p97.5_rm]),
lw=log(nyc[.N,p2.5_rm]){
((up-qnorm(.975,mean=mn,sd=sd))^2+(lw-qnorm(.025,mean=mn,sd=sd))^2) %>% return
}
ll <- function(sd,
mn=log(nyc[.N,rm]),
up=log(nyc[.N,p97.5_rm]),
lw=log(nyc[.N,p2.5_rm])){
((up-qnorm(.975,mean=mn,sd=sd))^2+(lw-qnorm(.025,mean=mn,sd=sd))^2) %>% return
}
sdlog <- optimize(f=ll,interval = c(.1,1e3))$minimum
sdlog
signif(1-plnorm(medium_alert_threshold,meanlog=log(nyc[.N,rm]),sdlog=sdlog),2)*100
prob=signif(1-plnorm(medium_alert_threshold,meanlog=log(nyc[.N,rm]),sdlog=sdlog),2)*100
ggplot(nyc[forecast==TRUE],aes(date,exp(mean_position)))+
geom_line(data=nyc[forecast==FALSE],lwd=2,col='red')+
geom_line(lwd=2,col='red',lty=2)
ggplot(nyc,aes(date,rm))+
geom_line(data=nyc[forecast==FALSE & !is.na(rm)],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)+
annotate(geom='text',x=as.Date('2022-03-18'),y=medium_alert_threshold+90,
label="Medium Alert Level Threshold",size=6)+
scale_y_continuous('New Cases')+
annotate(geom='segment',x=as.Date('2022-04-03'),xend=max(nyc_cases$date),y=2620,yend=medium_alert_threshold)+
annotate(geom='text',x=as.Date('2022-04-03'),y=2730,
label=paste(prob,'% chance of\n Medium Alert by ',max(nyc_cases$date),sep=''),
fill='white',color='black')+
geom_point(data=ny_tot_manual,cex=4,color='darkred')+
geom_line(data=ny_tot_manual,color='darkred')+
ggtitle('NYC Outbreak Forecast: If NYC follows UK trajectory')
ggplot(nyc,aes(date,rm))+
geom_line(data=nyc[forecast==FALSE & !is.na(rm)],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)
nyc[forecast==TRUE]
ix <- which(nyc$forecast)
x <- nyc$new_confirmed
x[ix] <- exp(nyc[ix,mean_position]) ## Forecast exp(mean_position)
x
ix
rm <- nyc$rm
rm
round(frollmean(x,7,align='right',na.rm=T))
x
mean(x[67:73])
round(frollmean(x,7,align='right',na.rm=T))
length(round(frollmean(x,7,align='right',na.rm=T)))
length(x)
mean(x[1;7])
mean(x[1:7])
mean(x[1:7],na.rm+T)
mean(x[1:7],na.rm=T)
x <- nyc$mean_position
x[ix] <- exp(nyc[ix,mean_position]) ## Forecast exp(mean_position)
rm <- nyc$rm
rm[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
rm
glue_ma <- function(nyc){
ix <- which(nyc$forecast)
x <-exp(nyc$mean_position)
x[ix] <- exp(nyc[ix,mean_position]) ## Forecast exp(mean_position)
rm <- nyc$rm
rm[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$rm <- rm
rm2.5 <- rm
x[ix] <- round(exp(nyc[ix,p2.5_position])) ## replace forecasted observations with
rm2.5[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$p2.5_rm <- rm2.5
rm97.5 <- rm
x[ix] <- round(exp(nyc[ix,p97.5_position]))
rm97.5[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$p97.5_rm <- rm97.5
return(nyc)
}
nyc <- xx[region=='New York City']
uk <- xx[region=='United Kingdom']
nyc <- forecast(nyc,uk) %>% glue_ma
ggplot(nyc,aes(date,rm))+
geom_line(data=nyc[forecast==FALSE & !is.na(rm)],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)
nyc$raw_cases
glue_ma <- function(nyc){
ix <- which(nyc$forecast)
x <- nyc$raw_cases
x[ix] <- exp(nyc[ix,mean_position]) ## Forecast exp(mean_position)
rm <- nyc$rm
rm[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$rm <- rm
rm2.5 <- rm
x[ix] <- round(exp(nyc[ix,p2.5_position])) ## replace forecasted observations with
rm2.5[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$p2.5_rm <- rm2.5
rm97.5 <- rm
x[ix] <- round(exp(nyc[ix,p97.5_position]))
rm97.5[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$p97.5_rm <- rm97.5
return(nyc)
}
nyc <- xx[region=='New York City']
uk <- xx[region=='United Kingdom']
nyc <- forecast(nyc,uk) %>% glue_ma
ggplot(nyc,aes(date,rm))+
geom_line(data=nyc[forecast==FALSE & !is.na(rm)],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)
ix <- which(nyc$forecast)
x <- nyc$raw_cases
x
x[ix]
x[ix-2]
exp(nyc[ix,mean_position])
rm
rm <- nyc$rm
ix <- which(nyc$forecast)
x <- nyc$raw_cases
x[ix] <- exp(nyc[ix,mean_position]) ## Forecast exp(mean_position)
rm <- nyc$rm
rm[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
rm
x
glue_ma <- function(nyc){
ix <- which(nyc$forecast)
x <- exp(nyc$mean_position)
# x[ix] <- exp(nyc[ix,mean_position]) ## Forecast exp(mean_position)
rm <- frollmean(exp(nyc$mean_position,7,align='right',na.rm=T))
rm[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$rm <- rm
rm2.5 <- rm
x[ix] <- round(exp(nyc[ix,p2.5_position])) ## replace forecasted observations with
rm2.5[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$p2.5_rm <- rm2.5
rm97.5 <- rm
x[ix] <- round(exp(nyc[ix,p97.5_position]))
rm97.5[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$p97.5_rm <- rm97.5
return(nyc)
}
nyc <- xx[region=='New York City']
uk <- xx[region=='United Kingdom']
nyc <- forecast(nyc,uk) %>% glue_ma
glue_ma <- function(nyc){
ix <- which(nyc$forecast)
x <- exp(nyc$mean_position)
# x[ix] <- exp(nyc[ix,mean_position]) ## Forecast exp(mean_position)
rm <- frollmean(exp(nyc$mean_position),7,align='right',na.rm=T)
rm[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$rm <- rm
rm2.5 <- rm
x[ix] <- round(exp(nyc[ix,p2.5_position])) ## replace forecasted observations with
rm2.5[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$p2.5_rm <- rm2.5
rm97.5 <- rm
x[ix] <- round(exp(nyc[ix,p97.5_position]))
rm97.5[ix] <- round(frollmean(x,7,align='right',na.rm=T))[ix]
nyc$p97.5_rm <- rm97.5
return(nyc)
}
nyc <- xx[region=='New York City']
uk <- xx[region=='United Kingdom']
nyc <- forecast(nyc,uk) %>% glue_ma
medium_alert_threshold=(200/1e5)*8.4e6/7
ll <- function(sd,
mn=log(nyc[.N,rm]),
up=log(nyc[.N,p97.5_rm]),
lw=log(nyc[.N,p2.5_rm])){
((up-qnorm(.975,mean=mn,sd=sd))^2+(lw-qnorm(.025,mean=mn,sd=sd))^2) %>% return
}
sdlog <- optimize(f=ll,interval = c(.1,1e3))$minimum
prob=signif(1-plnorm(medium_alert_threshold,meanlog=log(nyc[.N,rm]),sdlog=sdlog),2)*100
ggplot(nyc,aes(date,rm))+
geom_line(data=nyc[forecast==FALSE & !is.na(rm)],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)
ggplot(nyc,aes(date,rm))+
geom_line(data=nyc[forecast==FALSE & !is.na(rm)],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)
ggplot(nyc[outbreak_time>-10],aes(date,rm))+
geom_line(data=nyc[forecast==FALSE & !is.na(rm)],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)
ggplot(nyc[outbreak_time>-10],aes(date,rm))+
geom_line(data=nyc[forecast==FALSE & !is.na(rm) & outbreak_time>-10],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)
ggplot(nyc[outbreak_time>-10],aes(date,rm))+
geom_line(data=nyc[forecast==FALSE & !is.na(rm) & outbreak_time>-10],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)+
annotate(geom='text',x=as.Date('2022-03-18'),y=medium_alert_threshold+90,
label="Medium Alert Level Threshold",size=6)
ggplot(nyc[outbreak_time>-10],aes(date,rm))+
geom_line(data=nyc[forecast==FALSE & !is.na(rm) & outbreak_time>-10],lwd=2,col='red')+
geom_line(data=nyc[forecast==TRUE],lwd=2,lty=2,col='red')+
# geom_bar(data=nyc,aes(y=new_confirmed),stat='identity',col='red',fill=rgb(1,0,0,0.3))+
geom_ribbon(data=nyc[forecast==TRUE],aes(ymin=p2.5_rm,ymax=p97.5_rm),fill='red',alpha=0.2)+
geom_hline(yintercept = medium_alert_threshold,lwd=1)+
annotate(geom='text',x=as.Date('2022-03-18'),y=medium_alert_threshold+90,
label="Medium Alert Level Threshold",size=6)+
scale_y_continuous('New Cases')+
annotate(geom='segment',x=as.Date('2022-04-03'),xend=max(nyc_cases$date),y=2620,yend=medium_alert_threshold)+
annotate(geom='text',x=as.Date('2022-04-03'),y=2730,
label=paste(prob,'% chance of\n Medium Alert by ',max(nyc_cases$date),sep=''),
fill='white',color='black')+
geom_point(data=ny_tot_manual,cex=4,color='darkred')+
geom_line(data=ny_tot_manual,color='darkred')+
ggtitle('NYC Outbreak Forecast: If NYC follows UK trajectory')
prob=signif(1-plnorm(medium_alert_threshold,meanlog=log(nyc[.N,rm]),sdlog=sdlog),2)*100
prob
