{
    "collab_server" : "",
    "contents" : "library(gganimate)\nlibrary(ggplot2)\nlibrary(data.table)\nlibrary(magrittr)\nlibrary(plyr)\nlibrary(COVID19)\nlibrary(parallel)\nlibrary(ggpubr)\nsource('scripts/delta_omicron_utils.R')\ntheme_set(theme_bw(base_size=15))\n\nncores <- 6\n\nDD <- readRDS('data/outbreak_data_table.Rds')\n\n\np=ggplot(DD[outbreak=='Omicron' & ! state %in% c('California','Rhode Island')],\n         aes(time,growth_rate,group=state,frame=date,color=country))+\n  transition_reveal(date)+\n  geom_line(aes(size=country,alpha=country))+\n  enter_fade()+\n  scale_x_continuous('Outbreak Time',limits=c(0,40))+\n  exit_fade()+\n  scale_y_continuous('Growth Rate',limits=c(-0.15,0.4))+\n  ggtitle('Omicron Outbreak Tracker | Date: {frame_along}')+\n  scale_size_manual(values=c(2,1))+\n  scale_alpha_manual(values=c(0.5,0.8))+\n  scale_color_manual(values=c('forestgreen','black'))+\n  theme(legend.position=c(0.8,0.8))+\n  geom_hline(yintercept=0,color='darkgrey')\n\nanimate(p,nframes = length(unique(DD$date)),fps = 16) %>%\n  anim_save(filename='figures/Omicron_outbreak.gif',animation=.)\n\n\nggplot(DD[outbreak=='Omicron' & ! state %in% c('California','Rhode Island')],\n       aes(time,growth_rate,color=country))+\n  geom_line(aes(size=country,alpha=country,group=state))+\n  geom_smooth()+\n  scale_x_continuous('Outbreak Time',limits=c(0,40))+\n  scale_y_continuous('Growth Rate',limits=c(-0.15,0.4))+\n  ggtitle('Omicron Outbreaks')+\n  scale_size_manual(values=c(2,1))+\n  scale_alpha_manual(values=c(0.1,0.2))+\n  scale_color_manual(values=c('forestgreen','black'))+\n  theme(legend.position=c(0.8,0.8))+\n  geom_hline(yintercept=0,color='darkgrey')\nggsave('figures/Omicron_outbreak.png')\n\n\n\n# smoothed trajectories ---------------------------------------------------\n\n\nsmooth <- function(y,x,...) gam(y~s(x,bs='cr'),...)$fitted.values\nDD[,r_smooth:=smooth(growth_rate,time),by=id]\n\n# DD[,r_smooth:=nbs(new_confirmed,filtering=FALSE,dispersion=2),by=id]\n\n\nggplot(DD[outbreak=='Omicron' & ! state %in% c('California','Rhode Island')],\n       aes(time,r_smooth,color=country))+\n  geom_line(aes(size=country,alpha=country,group=state))+\n  geom_smooth()+\n  scale_x_continuous('Outbreak Time',limits=c(0,40))+\n  scale_y_continuous('Growth Rate',limits=c(-0.15,0.4))+\n  ggtitle('Omicron Outbreaks')+\n  scale_size_manual(values=c(2,1))+\n  scale_alpha_manual(values=c(0.1,0.2))+\n  scale_color_manual(values=c('forestgreen','black'))+\n  theme(legend.position=c(0.8,0.8))+\n  geom_hline(yintercept=0,color='darkgrey')\n\nggsave('figures/gifs/Omicron_outbreak_smooth.png')\n\n\n\np_smooth=ggplot(DD[outbreak=='Omicron' & ! state %in% c('California','Rhode Island')],\n         aes(time,r_smooth,group=state,frame=date,color=country))+\n  transition_reveal(date)+\n  geom_line(aes(size=country,alpha=country))+\n  enter_fade()+\n  scale_x_continuous('Outbreak Time',limits=c(0,40))+\n  exit_fade()+\n  scale_y_continuous('Case Exponential Growth Rate',limits=c(-0.15,0.4))+\n  ggtitle('Omicron Outbreak Tracker | Date: {frame_along}')+\n  scale_size_manual(values=c(2,1))+\n  scale_alpha_manual(values=c(0.5,0.8))+\n  scale_color_manual(values=c('forestgreen','black'))+\n  theme(legend.position=c(0.8,0.8))+\n  geom_hline(yintercept=0,color='darkgrey')\n\nanimate(p_smooth,nframes = length(unique(DD$date)),fps = 16,) %>%\n  anim_save(filename='figures/gifs/Omicron_outbreak_smooth.gif',animation=.)\n\n\n# State gif-making function ------------------------------------------------------------\n\ngif_my_states <- function(sts,filename=NULL,DD.=DD){\n  p_st <- ggplot(DD[outbreak=='Omicron' & \n                      (country=='South Africa'|state %in% sts)],\n         aes(time,growth_rate,group=state,frame=date,color=country))+\n    transition_reveal(date)+\n    geom_line(aes(size=country,alpha=country))+\n    geom_text(aes(label=state),subset= .(state %in% sts))+\n    enter_fade()+\n    scale_x_continuous('Outbreak Time',limits=c(0,40))+\n    exit_fade()+\n    scale_y_continuous('Case Exponential Growth Rate',limits=c(-0.15,0.4))+\n    ggtitle('Omicron Outbreak Tracker | Date: {frame_along}')+\n    scale_size_manual(values=c(2,2))+\n    scale_alpha_manual(values=c(0.5,0.8))+\n    scale_color_manual(values=c('forestgreen','black'))+\n    theme(legend.position=c(0.8,0.8))+\n    geom_hline(yintercept=0,color='darkgrey')\n  \n  if (is.null(filename)){\n    filename=paste('figures/gifs/',paste(gsub(' ','-',sts),collapse='_'),'_Omicron_outbreak_smooth.gif')\n  }\n  animate(p_st,nframes = length(unique(DD$date)),fps = 16) %>%\n    anim_save(filename=filename,animation=.)\n}\n\n\n\n# US state gifs -----------------------------------------------------------\n\n\ngif_my_states('District of Columbia')\ngif_my_states(c('Florida','Puerto Rico','Hawaii')) ### early US outbreaks\ngif_my_states(c('Florida','Puerto Rico','Hawaii','District of Columbia'))\n\n\n# US_counties -------------------------------------------------------------\ncounty_population_threshold <- 1e6\n\ncl <- makeCluster(ncores)\nclusterEvalQ(cl,expr = {library(tsoutliers)\n  library(magrittr)\n  library(tidyverse)})\nclusterExport(cl,'outlier_detection')\n\nthanksgiving <- c(seq(as.Date('2020-11-26'),as.Date('2020-11-27'),by='day'),\n                  seq(as.Date('2021-11-25'),as.Date('2021-11-29'),by='day'))\nchristmas <- as.Date(c('2020-12-25','2020-12-26'))\nny<- c(seq(as.Date('2021-01-01'),as.Date('2021-01-02'),by='day'),\n       seq(as.Date('2022-01-01'),as.Date('2022-01-02'),by='day'))\nlbr <- as.Date(c('2021-09-06','2021-09-07'))\nipd <- as.Date(c('2021-10-11','2021-10-12'))\nhlwn <- as.Date(c('2021-10-30','2021-10-31','2021-11-01'))\nind_day <- seq(as.Date('2021-07-03'),as.Date('2021-07-06'),by='day')\n\nUS_counties <- covid19(\"United States\",level=3) %>% as.data.table\nUS_counties <- US_counties[population>county_population_threshold]\nUS_counties[,country:=administrative_area_level_1]\nUS_counties[,state:=administrative_area_level_2]\nUS_counties[,county:=administrative_area_level_3]\nUS_counties <- US_counties[!state %in% c('Guam','Northern Mariana Islands','Virgin Islands','American Samoa')]\nUS_counties[,new_confirmed:=dfs(confirmed),by=c('state','county')]\nUS_counties[,new_deaths:=dfs(deaths),by=c('state','county')]\nUS_counties[,lbl:=paste(state,county,sep=',')]\nUS_counties <- US_counties[population>=county_population_threshold]\n\nUS_counties[date %in% c(thanksgiving,christmas,ny,lbr,ipd,hlwn,ind_day),new_confirmed:=NA]\nUS_counties <- US_counties[date>as.Date('2021-10-01')]\nUS_counties[,new_confirmed:=outlier_detection_par(new_confirmed,lbl,cl)]\n\n\nstopCluster(cl)\nrm('cl')\ngc()\n\nUS_counties[new_confirmed==0,new_confirmed:=NA]\n\nUS_counties[,growth_rate:=nbs(new_confirmed,filtering=TRUE,dispersion=2),by=c('state','county')]\nUS_counties <- US_counties[,c('date','new_confirmed','new_deaths','country','state','county',\n                              'growth_rate','id','lbl')]\n\n\nus_omicron <- function(r,date,new_confirmed,r_threshold=0.125,r_start=0.027,mn_date=as.Date('2021-11-24'),mx_date=as.Date('2022-01-15')){\n  if (!any(r[!is.na(r)]>r_threshold & date[!is.na(r)]>=mn_date & date[!is.na(r)]<=mx_date)){\n    y <- rep(FALSE,length(r))\n  } else {\n    ix <- min(which(r>r_threshold & date>mn_date))\n    ix <- max(which(r[1:ix]<r_start))\n    y <- (1:length(r))>=ix\n  }\n  return(y)\n}\n\nUS_counties[,omicron:=us_omicron(growth_rate,date,new_confirmed),by=id]\nUS_counties[omicron==TRUE,time:=1:.N,by=id]\n\nsaveRDS(US_counties,file = 'data/populous_US_counties_data_table.Rds')\nwrite.csv(US_counties,file = 'data/populous_US_counties_data_table.csv')\n\n\n\n# County visualization functions ----------------------------------------------------\nplot_state <- function(x,v=NA,US_states.=US_states){\n  ggarrange(\n    ggplot(US_states[state==x],aes(date,new_confirmed))+\n      geom_bar(stat='identity',aes(color=omicron,fill=omicron))+\n      geom_vline(xintercept = v)+\n      ggtitle(paste(x,'new cases')),\n    ggplot(US_states[state==x],aes(date,growth_rate))+\n      geom_line(lwd=2,aes(color=omicron))+\n      geom_vline(xintercept = v)+\n      ggtitle(paste(x,'r(t)')),\n    nrow=2,align='v') %>%\n    return()\n}\nplot_county <- function(x,v=NA,US_counties.=US_counties){\n  ggarrange(\n    ggplot(US_counties[county==x],aes(date,new_confirmed))+\n      geom_bar(stat='identity',aes(color=omicron,fill=omicron))+\n      geom_vline(xintercept = v)+\n      ggtitle(paste(x,'county new cases')),\n    ggplot(US_counties[county==x],aes(date,growth_rate))+\n      geom_line(lwd=2,aes(color=omicron))+\n      geom_vline(xintercept = v)+\n      ggtitle(paste(x,'county r(t)')),\n      nrow=2,align='v') %>%\n    return()\n}\n\n\ngif_my_county <- function(counties,county_labels=NULL,states=NULL,\n                          filename=NULL,omicron_start_date=NULL,\n                          DD.=DD,US_counties.=US_counties,fps=16){\n  if (!is.null(county_labels)){\n    if(length(county_labels)!=length(counties)){\n      stop('county_labels must be same length as counties')\n    }\n  } else {\n    county_labels <- counties\n  }\n  ucs <- US_counties[(county %in% counties)]\n  ucs[,label:=county_labels[match(county,counties)],by=county]\n  ucs[,country:='USA']\n  \n  if (!is.null(omicron_start_date)){\n    ucs$omicron <- NULL\n    ucs[,omicron:=date>=as.Date(omicron_start_date)]\n    ucs[omicron==TRUE,time:=1:.N]\n  }\n  ucs <- ucs[omicron==TRUE]\n  if (!is.null(states)){\n    ucs <- ucs[state %in% states]\n  }\n  xx <- DD[outbreak=='Omicron' & country=='South Africa']\n  xx[,label:=state]\n  \n  xx <- rbind(xx[,c('time','growth_rate','label','date','country')],\n              ucs[,c('time','growth_rate','label','date','country')])\n  \n  p_county <- ggplot(xx,aes(time,growth_rate,group=label,frame=date,color=country))+\n    transition_reveal(date)+\n    geom_line(aes(size=country,alpha=country))+\n    geom_text(aes(label=label))+\n    enter_fade()+\n    scale_x_continuous('Outbreak Time',limits=c(0,45))+\n    exit_fade()+\n    scale_y_continuous('Case Exponential Growth Rate',limits=c(-0.15,0.4))+\n    ggtitle(\"Omicron Outbreak Tracker | Date: {frame_along}\")+\n    scale_size_manual(values=c(2,2))+\n    scale_alpha_manual(values=c(0.5,0.7))+\n    scale_color_manual(values=c('forestgreen','black'))+\n    theme(legend.position=c(0.8,0.8))+\n    geom_hline(yintercept=0,color='darkgrey')\n  \n  if (is.null(filename)){\n    filename=paste('figures/gifs/counties_',paste(gsub(' ','-',counties),collapse='_'),'_Omicron_outbreak.gif')\n  }\n  animate(p_county,nframes = length(unique(xx$date)),fps = fps) %>%\n    anim_save(filename=filename,animation=.)\n}\n\n\n\n# County gifs -------------------------------------------------------------\n\ngif_my_county('New York City',fps=9,US_counties=US_counties)\n\ngif_my_county(c('New York City','Montgomery','Orange'),\n              county_labels = c('NYC','Montgomery, MD','Orange, FL'),\n              states=c('New York','Maryland','Florida'))\n\n### the following counties don't have Omicron waves classified by our\n### fast-growth classifier above. We'll chose start-dates\n### as the approximate date where their recent growth rate rises would \n### project backwards to zero.\n\nplot_county('Cook',v=as.Date('2021-12-11'))\nplot_county('Middlesex',v=as.Date('2021-12-15'))\n\ngif_my_county('Cook',omicron_start_date = '2021-12-11',fps=6)\ngif_my_county('New York City',fps=6)\n\n\ngif_my_county(c('Cook','Middlesex'),omicron_start_date = '2021-12-11',fps=6)\n\nUS_counties[county=='New York City',omicron:=date>=as.Date('2021-12-10')]\nUS_counties[county=='New York City' & omicron==TRUE,time:=1:.N]\nUS_counties[county=='Cook',omicron:=date>=as.Date('2021-12-11')]\nUS_counties[county=='Cook' & omicron==TRUE,time:=1:.N]\nUS_counties[county=='Middlesex',omicron:=date>=as.Date('2021-12-20')]\nUS_counties[county=='Middlesex' & omicron==TRUE,time:=1:.N]\n\n\ngif_my_county(c('New York City','Cook','Middlesex'),\n              county_labels=c('NYC','Chicago','Boston'),fps=7)\n\ngif_my_county('Alameda',fps=6)\ngif_my_county(\"Los Angeles\")\n\nggplot(US_counties[county=='Los Angeles'],aes(date,growth_rate,color=omicron))+\n  geom_line()\n\n\n# Include DC with NYC, Boston, Chicago ------------------------------------\n\nUS_counties\n\nDC <- DD[state=='District of Columbia']\n\nDC[,state:='D.C']\nDC[,county:='Washington DC']\nDC[outbreak=='Omicron',omicron:=TRUE]\nUS_counties <- rbind(US_counties[,c('time','date','county','growth_rate','state','growth_rate','new_confirmed','omicron')],\n                     DC[,c('time','date','county','growth_rate','state','growth_rate','new_confirmed','omicron')])\n\n\ngif_my_county(c('Washington DC','Los Angeles','New York City','Cook','Middlesex'),\n              c('DC','LA','NYC','Chicago','Boston'),fps=6)\n\ngif_my_county(c('Los Angeles','San Bernardino','San Diego',\n                'Contra Costa','Washington DC'),fps=6)\n\n# Delta gif ---------------------------------------------------------------\n\nDD[country=='USA',label:=state]\nDD[country!='USA' & outbreak=='Delta',label:=country]\nDD[country=='South Africa' & outbreak=='Omicron',label:=state]\n\ndelta_gif_my_states <- function(sts,filename=NULL,DD.=DD){\n  p_st <- ggplot(DD[outbreak=='Delta' & \n                      (country %in% c('United Kingdom','India','South Africa') |\n                         state %in% sts)],\n                 aes(time,growth_rate,group=label,frame=date,color=country))+\n    transition_reveal(date)+\n    geom_line(size=2)+\n    geom_text(aes(label=label))+\n    enter_fade()+\n    scale_x_continuous('Outbreak Time',limits=c(0,90))+\n    exit_fade()+\n    scale_y_continuous('Case Exponential Growth Rate',limits=c(-0.15,0.4))+\n    ggtitle('Delta Outbreak Tracker | Date: {frame_along}')+\n    scale_size_manual(values=c(2,2))+\n    scale_color_manual(values=c('#FF7722','#007a4d','#00247d','black'))+\n    theme(legend.position=c(0.8,0.8))+\n    geom_hline(yintercept=0,color='darkgrey')\n  \n  ### colors: India, South Africa, UK, USA\n  \n  if (is.null(filename)){\n    filename=paste('figures/gifs/Delta_',paste(gsub(' ','-',sts),collapse='_'),'outbreak.gif')\n  }\n  animate(p_st,nframes = length(unique(DD$date)),fps = 16) %>%\n    anim_save(filename=filename,animation=.)\n}",
    "created" : 1649439267660.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2586748154",
    "id" : "6B582A15",
    "lastKnownWriteTime" : 1645289984,
    "last_content_update" : 1645289984,
    "path" : "~/COVID/voc_outbreak_time/scripts/outbreak_comparison_gifs.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}